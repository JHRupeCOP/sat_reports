#!/usr/bin/env python3

import requests
import csv
import json
from datetime import datetime

# API credentials
SATELLITE_URL = "https://satellite.conocophillips.net/"
# SATELLITE_URL = "https://mariner.conocophillips.net/"
USERNAME = "ruppej"
PASSWORD = 

# Get the current date
current_date = datetime.now().strftime("%Y-%m-%d")

# Output file
OUTPUT_FILE = f"subscribed_hosts_report_{current_date}.csv"

# Function to fetch data from Satellite
def fetch_hosts_data():
    url = f"{SATELLITE_URL}/api/v2/hosts?per_page=1000"
    cert_path = "/etc/pki/tls/certs/ca-bundle.crt"
    response = requests.get(url, auth=(USERNAME, PASSWORD), verify=cert_path)
    # response = requests.get(url, auth=(USERNAME, PASSWORD), verify=False)
    if response.status_code == 200:
       return response.json()['results']
    else:
       response.raise_for_status()

# Function to parse data and generate report
def generate_report(hosts_data):
    # Dictionary to hold counts
    counts = {}
   
    # Loop through each host
    for host in hosts_data:
       os_version = host['operatingsystem_name']
       location = host['location_name']
       host_group = host['hostgroup_title']

       # Create a key for the counts dictionary
       key = (os_version, location, host_group)

       # Increment the count for the key
       if key in counts:
           counts[key] += 1
       else:
           counts[key] = 1

    # Write counts to CSV
    with open(OUTPUT_FILE, mode='w', newline='') as file:
        writer = csv.writer(file)
        writer.writerow(["OS Version", "Location", "Host Group","Count"])
        for key, count in counts.items():
            writer.writerow([key[0], key[1], count])

    print(f"Report generated: {OUTPUT_FILE}")

# Main function to run the script
def main():
    try:
        # Fetch hosts data
        hosts_data = fetch_hosts_data()

        # Generate report
        generate_report(hosts_data)
    except requests.RequestException as e:
        print(f"An error occurred: {e}")

if __name__ == "__main__":
    main()
